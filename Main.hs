--Daycee Duncan
--Student ID: 11507806
import Data.List
import GHC.Exts

main = do
  let n = 6
  let set = [1..n]

  let ordered = sortWith length $ subsequences set
  let ofLength3 = filter ((== 3) . length) ordered
  mapM_ (\x -> print (x, set \\ x)) ofLength3

{-
Output:
([1,2,3],[4,5,6])
([1,2,4],[3,5,6])
([1,3,4],[2,5,6])
([2,3,4],[1,5,6])
([1,2,5],[3,4,6])
([1,3,5],[2,4,6])
([2,3,5],[1,4,6])
([1,4,5],[2,3,6])
([2,4,5],[1,3,6])
([3,4,5],[1,2,6])
([1,2,6],[3,4,5])
([1,3,6],[2,4,5])
([2,3,6],[1,4,5])
([1,4,6],[2,3,5])
([2,4,6],[1,3,5])
([3,4,6],[1,2,5])
([1,5,6],[2,3,4])
([2,5,6],[1,3,4])
([3,5,6],[1,2,4])
([4,5,6],[1,2,3])
-}